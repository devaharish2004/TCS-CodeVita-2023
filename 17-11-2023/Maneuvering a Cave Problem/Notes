Cave Explorer Program in Python

The task is to count all the possible paths from top left to bottom right of a m x n matrix with the constraints that from each cell you can either move only to right or down.

Input: 

First line consists of T test cases. First line of every test case consists of N and M, denoting the number of rows and number of columns respectively.
Output: 

Single line output i.e count of all the possible paths from top left to bottom right of a m x n matrix..
Constraints:

1<=T<=100
1<=N<=100
1<=M<=100

Input: 
2
3 3
4 4
Output :
6
20


Solution :
Use recursion tree to understand the algorithm.
The algorithm starts from the bottom right coordinates, and then recursively move to the top and left to identify the paths.
Each coordinates taken will lead to two more paths.
When any one of the row or column is one, then it indicates that there will not be another path.
So that coordinate will lead to only one path, and that's why we return 1 in the algorithm if any one of the coordinates is one.
